@import './config.scss';
@import '../common/var.scss';

@mixin b($block) {
$B:$name+'-'+$block !global;
    .#{$B} {
      @content;
    }
  }
  //根据状态赋值
  @mixin when($state) {
    @at-root {
      &.#{$state-prefix + $state} {
        @content;
      }
    }
  }


  //清除浮动
  @mixin utils-clearfix {
    $selector: &;
  
    @at-root {
      #{$selector}::before,
      #{$selector}::after {
        display: table;
        content: "";
      }
      #{$selector}::after {
        clear: both
      }
    }
  }

  @mixin m($modifier) {
    $selector: &;
    $currentSelector: "";
    @each $unit in $modifier {
      $currentSelector: #{$currentSelector + & + $modifier-separator + $unit + ","};
    }
  
    @at-root {
      #{$currentSelector} {
        @content;
      }
    }
  }
  /* 响应屏幕
 -------------------------- */
@mixin res($key, $map: $--breakpoints) {
  // 循环断点Map，如果存在则返回
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    @warn "Undefeined points: `#{$map}`";
  }
}